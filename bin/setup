#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

def ensure_binary_installed(binary)
  return unless `command -v #{binary}`.empty?
  puts '== Binary Missing =='
  puts "Please install #{binary} before proceeding (e.g. brew install #{binary})"
  exit 1
end

def ensure_process_running(process)
  return unless `pgrep #{process}`.empty?
  puts '== Process Not Running =='
  puts "Please start #{process} before proceeding (e.g. brew services start #{process})"
  exit 1
end

chdir APP_ROOT do
  puts '== Preparing System =='
  system 'mkdir -p .git/safe'
  system 'heroku git:remote -a bootkit-staging &> /dev/null'
  system 'heroku git:remote -a bootkit-production -r production &> /dev/null'
  system 'git config heroku.remote heroku &> /dev/null'
  ensure_binary_installed 'postgres'
  ensure_binary_installed 'chromedriver'
  ensure_process_running 'postgres'
  ensure_process_running 'chromedriver'

  puts '== Installing dependencies =='
  system 'gem install bundler --conservative'
  system 'bundle check > /dev/null || bundle install --path .bundle/bundle --binstubs .bundle/bundle/bin'
  system! 'yarn'
  system 'spring stop &> /dev/null'

  puts '== Preparing database =='
  system! 'bin/rails db:drop db:create db:migrate db:setup'

  puts '== Removing old logs and tempfiles =='
  system! 'bin/rails log:clear tmp:clear'

  puts '== Restarting application server =='
  system! 'bin/rails restart'

  puts '== Warming Assets =='
  system 'curl -s localhost:3000 > /dev/null'
end
